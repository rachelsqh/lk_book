digraph G {

  	concentrate=True;
  	rankdir="TB";
  	node [shape=record];

	node [
	fontsize = "16"
	shape = "ellipse"
	];
	label = "modpost处理流程图"
	
  subgraph modpost {
  	A[shape=rect,label="modpost"];
  	B[shape=rect,label="-e:external_module = 1"];

  	C[shape=rect,label="i:dump_read_start/dump_read_iter"];
  	E[shape=rect,label="m:modversions = 1"];
	F[shape=rect,label="o:dump_write"];

	G[shape=rect,label="T:files_source"];
 
	I[shape=rect,label="write_dump:dump_write"];

	J[shape=rect,label="export_str"];
	K[shape=rect,label="结束"];

 	A ->B
  	B -> C
  	C -> E 
  	E -> F
  	F -> G
  	G -> drs0
  	drs0 -> rsff
  	rsff -> mp 
  	mp -> I
  	I -> J
  	J -> K

  subgraph mod_pro_mod_c {
  	mp[shape=rect,label="mod_process:"];
	mp0[shape=rect,label="check_modname_len"];

	mp1[shape=rect,label="add_header:mod.c固定信息"];
	
	mp2[shape=rect,label="add_intree_flag:"];

	mp3[shape=rect,label="add_retpoline:"];
	
	mp4[shape=rect,label="add_staging_flag:"];

	mp5[shape=rect,label="add_version:"];

	mp6[shape=rect,label="add_depends:"];

	mp7[shape=rect,label=" add_mpddevtable:"];

	mp8[shape=rect,label="add_srcersion"];

	mp9[shape=rect,label="wrinte_if_changed:mod.c"];
	
	mp ->mp0  
	mp0 -> cpf
  	cpf -> mp1
  	mp1 -> mp2
  	mp2 -> mp3
  	mp3 -> mp4
  	mp4 -> mp5
  	mp5 -> mp6
  	mp6 -> mp7
  	mp7 -> mp8
  	mp8 -> mp9
  }

  subgraph check_exports_func {
  	cpf[shape=rect,label="check_export:符号"];
  }

  subgraph dump_read_start {
  	drs0[shape=rect,label="read_dump"];
  }

  subgraph read_symbols_from_files {
  	rsff[shape=rect,label="read_symbols_from_files:files_source:按行解析"]; 
	rsff-> rs
  }

  subgraph read_symbols{
	label = "为每一个o文件创建一个mod结构";
  	rs[shape=rect,label="read_symbols:modname:k_m.o"]; 
	rs0[shape=rect,label="parse_elf:elf_info"];
	rs1[shape=rect,label="new_module:mod"];
	rs2[shape=rect,label="get_modinfo:license"];
	rs3[shape=rect,label="get_modinfo:import_ns"];
	rs4[shape=rect,label="handle_symbol"];
  	rs5[shape=rect,label="handle_moddevtable"];
  	rs6[shape=rect,label="sym_update_namespace:__kstrtabns_"];
  	rs7[shape=rect,label="handle_modversion:__crc_"];
  	rs8[shape=rect,label="find_symbol:STB_GLOBAL 或 STB_WEAK"];
  	rs9[shape=rect,label="check_sec_ref"];
  	rs10[shape=rect,label="get_modinfo:version"];
  	rs11[shape=rect,label="get_src_version:"];
  	rs12[shape=rect,label="parse_elf_finish:"];
  	rs13[shape=rect,label="alloc_symbol:module_layout"];
  

	rs -> rs0-> rs1 -> rs2 -> rs3 -> rs4 -> rs5 -> rs6 -> rs7 -> rs8 -> rs9 -> rs10 -> rs11 -> rs12 -> rs13;
	}
}

}

